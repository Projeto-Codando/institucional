name: codando_server
on:
  push:
    branches: ["prod"]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile  # Ajuste o caminho do Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/codando_server:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/codando_server:${{ github.run_number }}
      
  update-ec2:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Set up SSH
        run: |
          # Criar diretório SSH e configurar a chave privada
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
  
          # Adicionar a chave pública do host (se necessário)
          ssh-keyscan -t rsa 54.210.10.240 >> ~/.ssh/known_hosts
  
      - name: Validate EC2 Availability
        run: |
          # Testar a conexão com a EC2
          if ! ssh -o ConnectTimeout=10 -o StrictHostKeyChecking=no ubuntu@54.210.10.240 'echo "Conexão bem-sucedida"'; then
            echo "A EC2 está desligada ou inacessível. Encerrando o workflow."
            exit 1
          fi

      - name: Trigger EC2 Runner Workflow
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@54.210.10.240 \
            'sudo docker pull ismaelog1/codando_server:latest && \
             sudo docker stop $(sudo docker ps -aq) || true && \
             sudo docker rm $(sudo docker ps -aq) || true && \
             sudo docker run -d -p 80:80 -p 443:443 --name codando ismaelog1/codando_server'
